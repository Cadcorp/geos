<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geometry Formats on GEOS</title>
    <link>https://libgeos.org/specifications/</link>
    <description>Recent content in Geometry Formats on GEOS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 14:21:00 -0700</lastBuildDate><atom:link href="https://libgeos.org/specifications/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GeoJSON</title>
      <link>https://libgeos.org/specifications/geojson/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/geojson/</guid>
      <description>&amp;ldquo;GeoJSON&amp;rdquo; is a standard for structuring JSON when encoding geometry and features. By using GeoJSON, rather than some other arbitrary scheme for structuring JSON, you maximize the interoperability of your JSON output. There are dozens of tools and websites that happily consume and emit GeoJSON.
The GeoJSON standard is formally maintained by the IETF as &amp;ldquo;RFC 7946&amp;rdquo;.
Unlike WKB and WKT, GeoJSON does not restrict itself to just geometry representation. It also standardizes the transport of attribution.</description>
    </item>
    
    <item>
      <title>Well-Known Binary (WKB)</title>
      <link>https://libgeos.org/specifications/wkb/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/wkb/</guid>
      <description>&amp;ldquo;Well-known binary&amp;rdquo; is a scheme for writing a simple features geometry into a platform-independent array of bytes, usually for transport between systems or between programs. By using WKB, systems can avoid exposing their particular internal implementation of geometry storage, for greater overall interoperability.
GEOS can read and write three &amp;ldquo;flavours&amp;rdquo; of WKB:
 Standard WKB Extended WKB ISO WKB  When reading WKB, GEOS will transparently detect the flavour of WKB and automatically read it.</description>
    </item>
    
    <item>
      <title>Well-Known Text (WKT)</title>
      <link>https://libgeos.org/specifications/wkt/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/wkt/</guid>
      <description>&amp;ldquo;Well-known text&amp;rdquo; is a scheme for writing a simple features geometry into a standard text string.
Examples  POINT (0 0) POINT EMPTY LINESTRING (0 0, 0 1, 1 2) LINESTRING EMPTY POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0)) POLYGON ((0 0, 4 0, 4 4, 0 4, 0 0), (1 1, 1 2, 2 2, 2 1, 1 1)) POLYGON EMPTY MULTIPOINT ((0 0), (1 1)) MULTILINESTRING ((0 0, 1 1), (2 2, 3 3)) MULTIPOLYGON (((1 1, 1 3, 3 3, 3 1, 1 1)), ((4 3, 6 3, 6 1, 4 1, 4 3))) GEOMETRYCOLLECTION (MULTIPOINT((0 0), (1 1)), POINT(3 4), LINESTRING(2 3, 3 4))  WKT BNF &amp;lt;x&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;y&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;z&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;m&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;empty set&amp;gt; ::= EMPTY &amp;lt;zm&amp;gt; ::= ZM | Z | M &amp;lt;comma&amp;gt; ::= , &amp;lt;left paren&amp;gt; ::= ( &amp;lt;right paren&amp;gt; ::= ) &amp;lt;point&amp;gt; ::= &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; [ &amp;lt;z&amp;gt; ] [ &amp;lt;m&amp;gt; ] &amp;lt;point text&amp;gt; ::= &amp;lt;empty set&amp;gt; | &amp;lt;left paren&amp;gt; &amp;lt;point&amp;gt; &amp;lt;right paren&amp;gt; &amp;lt;linestring text&amp;gt; ::= &amp;lt;empty set&amp;gt; | &amp;lt;left paren&amp;gt; &amp;lt;point&amp;gt; {&amp;lt;comma&amp;gt; &amp;lt;point&amp;gt;} .</description>
    </item>
    
  </channel>
</rss>
